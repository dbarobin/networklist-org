{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SnackbarController from '../components/snackbar';\nimport stores from '../stores/index.js';\nimport { CONFIGURE } from '../stores/constants';\nimport '../styles/globals.css';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: themeConfig,\n    1: setThemeConfig\n  } = useState(lightTheme);\n\n  const changeTheme = dark => {\n    setThemeConfig(dark ? darkTheme : lightTheme);\n    localStorage.setItem(\"yearn.finance-dark-mode\", dark ? \"dark\" : \"light\");\n  };\n\n  useEffect(function () {\n    const localStorageDarkMode = window.localStorage.getItem(\"yearn.finance-dark-mode\");\n    changeTheme(localStorageDarkMode ? localStorageDarkMode === \"dark\" : false);\n  }, []);\n  useEffect(function () {\n    stores.dispatcher.dispatch({\n      type: CONFIGURE\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(ThemeProvider, {\n    theme: themeConfig,\n    children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n      changeTheme: changeTheme\n    })), /*#__PURE__*/_jsx(SnackbarController, {})]\n  });\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}