{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Switch, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/core/styles';\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CONNECT_WALLET, TRY_CONNECT_WALLET, ACCOUNT_CONFIGURED } from '../../stores/constants'; // import Unlock from '../unlock'\n\nimport stores from '../../stores';\nimport { formatAddress, getProvider } from '../../utils';\nimport classes from './header.module.css';\nvar StyledSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 58,\n      height: 32,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(28px)',\n        color: '#212529',\n        '& + $track': {\n          backgroundColor: '#ffffff',\n          opacity: 1\n        }\n      },\n      '&$focusVisible $thumb': {\n        color: '#ffffff',\n        border: '6px solid #fff'\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24\n    },\n    track: {\n      borderRadius: 32 / 2,\n      border: \"1px solid #212529\",\n      backgroundColor: '#212529',\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    checked: {},\n    focusVisible: {}\n  };\n})(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return /*#__PURE__*/_jsx(Switch, _objectSpread({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props));\n});\n\nfunction Header(props) {\n  var _useState = useState(null),\n      account = _useState[0],\n      setAccount = _useState[1];\n\n  var _useState2 = useState(props.theme.palette.type === 'dark' ? true : false),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      unlockOpen = _useState3[0],\n      setUnlockOpen = _useState3[1];\n\n  useEffect(function () {\n    var accountConfigure = function accountConfigure() {\n      var accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n    };\n\n    var connectWallet = function connectWallet() {\n      onAddressClicked();\n      stores.dispatcher.dispatch({\n        type: TRY_CONNECT_WALLET\n      });\n    };\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure);\n    stores.emitter.on(CONNECT_WALLET, connectWallet);\n    var accountStore = stores.accountStore.getStore('account');\n    setAccount(accountStore);\n    return function () {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure);\n      stores.emitter.removeListener(CONNECT_WALLET, connectWallet);\n    };\n  }, []);\n\n  var handleToggleChange = function handleToggleChange(event, val) {\n    setDarkMode(val);\n    props.changeTheme(val);\n  };\n\n  var onAddressClicked = function onAddressClicked() {\n    stores.dispatcher.dispatch({\n      type: TRY_CONNECT_WALLET\n    });\n  };\n\n  var renderProviderLogo = function renderProviderLogo() {\n    var providerLogoList = {\n      Metamask: 'metamask',\n      imToken: 'imtoken',\n      Wallet: 'metamask'\n    };\n    return providerLogoList[getProvider()];\n  };\n\n  useEffect(function () {\n    var localStorageDarkMode = window.localStorage.getItem('yearn.finance-dark-mode');\n    setDarkMode(localStorageDarkMode ? localStorageDarkMode === 'dark' : false);\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.headerContainer,\n    children: [props.backClicked && /*#__PURE__*/_jsx(\"div\", {\n      className: classes.backButton,\n      children: /*#__PURE__*/_jsx(Button, {\n        color: props.theme.palette.type === 'light' ? 'primary' : 'secondary',\n        onClick: props.backClicked,\n        disableElevation: true,\n        children: /*#__PURE__*/_jsx(ArrowBackIcon, {\n          fontSize: 'large'\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.themeSelectContainer,\n      children: /*#__PURE__*/_jsx(StyledSwitch, {\n        icon: /*#__PURE__*/_jsx(Brightness2Icon, {\n          className: classes.switchIcon\n        }),\n        checkedIcon: /*#__PURE__*/_jsx(WbSunnyOutlinedIcon, {\n          className: classes.switchIcon\n        }),\n        checked: darkMode,\n        onChange: handleToggleChange\n      })\n    }), /*#__PURE__*/_jsxs(Button, {\n      disableElevation: true,\n      className: classes.accountButton,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: onAddressClicked,\n      children: [account && account.address && /*#__PURE__*/_jsx(\"div\", {\n        className: \"\".concat(classes.accountIcon, \" \").concat(classes[renderProviderLogo()])\n      }), /*#__PURE__*/_jsx(Typography, {\n        variant: \"h5\",\n        children: account && account.address ? formatAddress(account.address) : 'Connect Wallet'\n      })]\n    })]\n  });\n}\n\nexport default withTheme(Header);","map":null,"metadata":{},"sourceType":"module"}