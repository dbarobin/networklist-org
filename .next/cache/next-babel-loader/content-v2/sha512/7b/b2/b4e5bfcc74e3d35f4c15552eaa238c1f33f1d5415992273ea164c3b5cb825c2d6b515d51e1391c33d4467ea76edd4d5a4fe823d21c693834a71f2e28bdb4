{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Grid, Button, Tooltip } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { useRouter } from 'next/router';\nimport Web3 from 'web3';\nimport classes from './chain.module.css';\nimport stores from '../../stores/index.js';\nimport { getProvider } from '../../utils';\nimport { ERROR, CONNECT_WALLET, TRY_CONNECT_WALLET, ACCOUNT_CONFIGURED } from '../../stores/constants';\nexport default function Chain({\n  chain\n}) {\n  const router = useRouter();\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  useEffect(() => {\n    const accountConfigure = () => {\n      const accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n    };\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure);\n    const accountStore = stores.accountStore.getStore('account');\n    setAccount(accountStore);\n    return () => {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure);\n    };\n  }, []);\n\n  const toHex = num => {\n    return '0x' + num.toString(16);\n  };\n\n  const addToNetwork = () => {\n    if (!(account && account.address)) {\n      stores.dispatcher.dispatch({\n        type: TRY_CONNECT_WALLET\n      });\n      return;\n    }\n\n    const params = {\n      chainId: toHex(chain.chainId),\n      // A 0x-prefixed hexadecimal string\n      chainName: chain.name,\n      nativeCurrency: {\n        name: chain.nativeCurrency.name,\n        symbol: chain.nativeCurrency.symbol,\n        // 2-6 characters long\n        decimals: chain.nativeCurrency.decimals\n      },\n      rpcUrls: chain.rpc,\n      blockExplorerUrls: [chain.explorers && chain.explorers.length > 0 && chain.explorers[0].url ? chain.explorers[0].url : chain.infoURL]\n    };\n    window.web3.eth.getAccounts((error, accounts) => {\n      window.ethereum.request({\n        method: 'wallet_addEthereumChain',\n        params: [params, accounts[0]]\n      }).then(result => {\n        console.log(result);\n      }).catch(error => {\n        stores.emitter.emit(ERROR, error.message ? error.message : error);\n        console.log(error);\n      });\n    });\n  };\n\n  const renderProviderText = () => {\n    if (account && account.address) {\n      const providerTextList = {\n        Metamask: 'Add to Metamask',\n        imToken: 'Add to imToken',\n        Wallet: 'Add to Wallet'\n      };\n      return providerTextList[getProvider()];\n    } else {\n      return 'Connect wallet';\n    }\n  };\n\n  if (!chain) {\n    return /*#__PURE__*/_jsx(\"div\", {});\n  }\n\n  return /*#__PURE__*/_jsxs(Paper, {\n    elevation: 1,\n    className: classes.chainContainer,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.chainNameContainer,\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: \"/connectors/icn-asd.svg\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = \"/chains/unknown-logo.png\";\n        },\n        width: 28,\n        height: 28,\n        className: classes.avatar\n      }), /*#__PURE__*/_jsx(Tooltip, {\n        title: chain.name,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"h3\",\n          className: classes.name,\n          noWrap: true,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            href: chain.infoURL,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: chain.name\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.chainInfoContainer,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.dataPoint,\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          className: classes.dataPointHeader,\n          children: \"ChainID\"\n        }), /*#__PURE__*/_jsx(Typography, {\n          variant: \"h5\",\n          children: chain.chainId\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.dataPoint,\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          className: classes.dataPointHeader,\n          children: \"Currency\"\n        }), /*#__PURE__*/_jsx(Typography, {\n          variant: \"h5\",\n          children: chain.nativeCurrency ? chain.nativeCurrency.symbol : 'none'\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.addButton,\n      children: /*#__PURE__*/_jsx(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: addToNetwork,\n        children: renderProviderText()\n      })\n    })]\n  }, chain.chainId);\n}","map":null,"metadata":{},"sourceType":"module"}