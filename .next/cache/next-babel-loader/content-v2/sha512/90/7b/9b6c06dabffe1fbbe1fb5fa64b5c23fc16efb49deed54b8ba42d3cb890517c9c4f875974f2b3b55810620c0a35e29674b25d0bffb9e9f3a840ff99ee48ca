{"ast":null,"code":"import _regeneratorRuntime from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/data/dbarobin/networklist-org/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ERROR, STORE_UPDATED, CONFIGURE, ACCOUNT_CONFIGURED, ACCOUNT_CHANGED, TRY_CONNECT_WALLET } from './constants';\nimport stores from './';\nimport Web3 from 'web3';\n\nvar Store = /*#__PURE__*/function () {\n  function Store(dispatcher, emitter) {\n    var _this = this;\n\n    _classCallCheck(this, Store);\n\n    _defineProperty(this, \"configure\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(this, \"updateAccount\", function () {\n      var that = _this;\n      var res = window.ethereum.on('accountsChanged', function (accounts) {\n        that.setStore({\n          account: {\n            address: accounts[0]\n          }\n        });\n        that.emitter.emit(ACCOUNT_CHANGED);\n        that.emitter.emit(ACCOUNT_CONFIGURED);\n      });\n    });\n\n    _defineProperty(this, \"getWeb3Provider\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3context, provider;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3context = _this.getStore('web3context');\n              provider = null;\n\n              if (!web3context) {\n                provider = network.providers['1'];\n              } else {\n                provider = web3context.library.provider;\n              }\n\n              if (provider) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", null);\n\n            case 5:\n              return _context2.abrupt(\"return\", new Web3(provider));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(this, \"tryConnectWallet\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context3.next = 16;\n                break;\n              }\n\n              window.web3 = new Web3(ethereum);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return ethereum.enable();\n\n            case 5:\n              _context3.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context3.sent;\n\n              _this.setStore({\n                account: {\n                  address: accounts[0]\n                },\n                web3: window.web3\n              });\n\n              _this.emitter.emit(ACCOUNT_CONFIGURED);\n\n              _context3.next = 14;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](2);\n\n            case 14:\n              _context3.next = 26;\n              break;\n\n            case 16:\n              if (!window.web3) {\n                _context3.next = 25;\n                break;\n              }\n\n              window.web3 = new Web3(web3.currentProvider);\n              _context3.next = 20;\n              return web3.eth.getAccounts();\n\n            case 20:\n              accounts = _context3.sent;\n\n              _this.setStore({\n                account: {\n                  address: accounts[0]\n                },\n                web3: window.web3\n              });\n\n              _this.emitter.emit(ACCOUNT_CONFIGURED);\n\n              _context3.next = 26;\n              break;\n\n            case 25:\n              console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 12]]);\n    })));\n\n    this.dispatcher = dispatcher;\n    this.emitter = emitter;\n    this.store = {\n      account: null,\n      web3: null\n    };\n    dispatcher.register(function (payload) {\n      switch (payload.type) {\n        case CONFIGURE:\n          this.configure(payload);\n          break;\n\n        case TRY_CONNECT_WALLET:\n          this.tryConnectWallet(payload);\n          break;\n\n        default:\n          {}\n      }\n    }.bind(this));\n  }\n\n  _createClass(Store, [{\n    key: \"getStore\",\n    value: function getStore(index) {\n      return this.store[index];\n    }\n  }, {\n    key: \"setStore\",\n    value: function setStore(obj) {\n      this.store = _objectSpread(_objectSpread({}, this.store), obj);\n      return this.emitter.emit(STORE_UPDATED);\n    }\n  }]);\n\n  return Store;\n}();\n\nexport default Store;","map":null,"metadata":{},"sourceType":"module"}